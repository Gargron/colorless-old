$(function() {    $(".entry-content object").attr({width: "502", height: "308"});    $(".widget-tabbed .tab-links a").click(function(e) {        e.preventDefault();        $(this).parent().addClass("active").siblings().removeClass("active");        $(this).parent().parent().parent().find(".tab-is").removeClass("active");        $(this).parent().parent().parent().find(".tab-is").eq($(this).parent().index()).addClass("active");    });    $(".form-tabbed .form-tab-navigation a").click(function(e) {        e.preventDefault();        $(this).addClass("active").parent().siblings().find("a").removeClass("active");        $(this).parent().parent().parent().find(".form-tab").removeClass("active");        $(this).parent().parent().parent().find(".form-tab").eq($(this).parent().index()).addClass("active");    });    $(".add-friend-link").click(function(e) {        e.preventDefault();        var uid = $(this).attr("data-uid");        if(toggleRelate(uid, "friend")) {            $(this).text("Request sent");        } else {            alert("Failed D:");        }    });    $("#next_popular").click(function() {        rotateWidget();    });    $("#thread-likes-item>a").click(function(e) {        e.preventDefault();        heartThread($(this).attr("data-threadid"));    });    $(".bottom-slideup").hide();    $(".remove-friend-link").click(function(e) {        e.preventDefault();        var uid = $(this).attr("data-uid");        if(toggleRelate(uid, "fiend")) {            $(this).text("Unfriended");        } else {            alert("Failed D:");        }    });    $(".nav-dropdown-link").toggle(function() {        $(this).siblings(".nav-dropdown").show();    }, function() {        $(this).siblings(".nav-dropdown").hide();    });    $(".nav-toggle-link").click(function() {        $(this).siblings(".nav-toggle-content").first().slideToggle("slow");        $(this).toggleClass("nav-toggle-link-inactive");    });    $("#user-vcard-more a#user-vcard-more-link").toggle(function() {        $(this).text("Less " + $("<div>").html("&larr;").text());        $(this).siblings("ul").slideDown("fast");    }, function() {        $(this).text("More " + $("<div>").html("&rarr;").text());        $(this).siblings("ul").slideUp("fast");    });    if($("#postTags")) {        $("#postTags").tagsInput({width: "98%"});    }    if($("#postContent").is("textarea")) {        if($("#postUpload").is("input")) {            var textbox     = $('#postContent');            var upload_ids  = $("#postUploadIDs");            var upload_list = $("#postUploadList");            new AjaxUpload('postUpload', {                    action: '/upload/single',                    name: 'postUpload',                    allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],                    onSubmit: function(file, extension) {                            $('#loader').fadeIn(500);                    },                    onComplete: function(file, response) {                            $("#loader").fadeOut(500);                            var o = $.parseJSON(response);                            $("<li></li>").html('<img src="http://thecolorless.net/uploads/'+o.filename+'" width="100" /><input type="text" readonly="readonly" value="http://thecolorless.net/uploads/'+o.filename+'" />').appendTo(upload_list);                            upload_list.find(".nothing").parent().slideUp(500);                            //[![](real image url)](image page url)                            //var page_url = o.filename.replace(/\_medium\.([a-z]+)/, "");                            //textbox.val(textbox.val()+"\n[![](http://thecolorless.net/uploads/"+o.filename+")](http://thecolorless.net/i/"+page_url+")\n");                            textbox.val(textbox.val()+"\nhttp://thecolorless.net/uploads/"+o.filename+"\n");                            upload_ids.val(o.id+","+upload_ids.val());                    }            });            $("#postUploadList img[class!=nothing]").live('click', function() {                var url = $(this).attr("src");                textbox.val(textbox.val()+"\n"+url+"\n");            });            $("#postUploadList input[type=text]").live('click', function() {                $(this).select();            });            $("#postUploadList input[type=text]").tipTip({                defaultPosition: "top",                activation: "focus",                maxWidth: "400px",                content: "This is the URL to the image. Click on the thumbnail beneath to insert this URL into your post"            });        }        $("#pollAnswersB").tagsInput({            'width': '98%',            'height': '25px',            'defaultText': 'add answer'        });        $("#eventForm #eventEnd").mask("99/99/9999",{placeholder:"-"});        $("#eventForm #eventStart").mask("99/99/9999",{placeholder:"-"});        $("#newPost").submit(function() {            $("#newPost #eventName").val($("#eventForm #eventName").val());            $("#newPost #eventLocation").val($("#eventForm #eventLocation").val());            $("#newPost #eventStart").val($("#eventForm #eventStart").val());            $("#newPost #eventEnd").val($("#eventForm #eventEnd").val());            $("#newPost #eventStatus").val($("#eventForm").is(':visible') ? "enabled" : "disabled");            $("#newPost #pollQuestion").val($("#pollForm #pollQuestion").val());            $("#newPost #pollAnswers").val($("#pollForm #pollAnswersB").val());            $("#newPost #pollStatus").val($("#pollForm").is(':visible') ? "enabled" : "disabled");        });        $("#doPreview").click(function() {            $("#loader").fadeIn(500);            $.post('/post/preview', {'raw': $('#postContent').val()}, function(o) {                $("#postPreview").html(o);                $("#postPreviewContainer").slideDown(800, function() {                    $(window).scrollTo($("#postPreviewContainer"), 800);                });                $("#loader").fadeOut(500);            });        });    }    tipTip(".tooltipped", {defaultPosition: "top", fadeIn: 50, fadeOut: 50, delay: 50});    tipTip(".tooltipped-b", {defaultPosition: "bottom", fadeIn: 50, fadeOut: 50, delay: 50});    if($(window).width() >= 481) {        $(window).scroll(function (event) {          // what the y position of the scroll is          var y = $(this).scrollTop();          // whether that's below the form          if (y >= 200) {            // if so, ad the fixed class            $('#back-to-top-master').fadeIn("fast");          } else {            // otherwise remove it            $('#back-to-top-master').fadeOut("fast");          }        });    }    $("#back-to-top-master").click(function(e) {        e.preventDefault();        $('html, body').animate({scrollTop:0}, 500);    });});setInterval(liveTime, 10000);jQuery.extend(jQuery.expr[':'], {    focus: function(element) {        return element == document.activeElement;    }});var tipTip = function(selector, options) {    var elements = jQuery(selector);    elements.tipTip(options);    // apply tipTips as usual    $('body').ajaxComplete(function() {        elements = jQuery(selector); // reselect elements        elements.tipTip(options);   // and apply again after ajax requests    });    return elements;}/* Keyboard navigation with J and K between threads and thread entries */var pos = 0;var m = function(i) {    var min = 0;    var max = $('.thread-item, .entry').size() - 1;    var test_pos = pos + i;    if(test_pos >= min && test_pos <= max) {        pos += i;        $.scrollTo('.thread-item:eq(' + pos + '), .entry:eq(' + pos + ')')    } else {        return false;    }};$(document).keydown(function(e) {    if($("input, textarea, select").is(":focus")) {        //Do nothing    } else {        switch (e.keyCode) {        case 74:            m(1);            break;        case 75:            m(-1);            break;        }    }});/* Awesome custom functions */function quotePost(o) {    var postID = $(o).parent().parent().parent().attr("id");    var oldContent = $("#postContent").val();    var postAuthor = $(o).parent().parent().parent().find(".user>a").text();    $("#postContent").val("@"+postAuthor+/*"/"+postID+*/" "+oldContent).focus();}function toggleRelate(uid, model) {    var status = $.get("/profile/relate/"+model+"/"+uid, {}, function(o) {        o = o.toJSON();        if(o.status == "ok")            return true;        else            return false;    });    return status;}function heartThread(id) {    $("#loader").fadeIn(500);    $.getJSON(        '/thread/toggle_follow/'+id,        {},        function(o) {            $("#loader").fadeOut(500);            if(o.code == "200") {                if(o.status == "following") {                    $("#thread-likes-item").addClass("is-following");                    $("#thread-likes").text(o.count);                    $("#thread-likes-text").text("Unheart it");                } else {                    $("#thread-likes-item").removeClass("is-following");                    $("#thread-likes").text(o.count);                    $("#thread-likes-text").text("Heart it");                }            } else {                alert("Your love didn't go through (The request failed)");            }        }    );}function rotateWidget() {    $("#loader").fadeIn(500);    $.get('/thread/popular_widget?'+Math.random(), function(data) {        $("#featured-popular").fadeOut(500, function() {            $("#featured-popular").html(data);            $("#loader").fadeOut(500);            $("#featured-popular").fadeIn(500);        });    });}function liveTime() {    $(".timestamp").each(function(i, e) {        var stamp = $(e).attr("data-timestamp");        $(e).text(Date.relativeTime(stamp));    });}//Function by RyanDate.UTCTimestamp = function(o){  if( !(o && o instanceof Date) )    o = new Date();  return Date.UTC( o.getUTCFullYear(), o.getUTCMonth(), o.getUTCDate(), o.getUTCHours(), o.getUTCMinutes(), o.getUTCSeconds() ) / 1000;}Date.relativeTime = function(ts1,ts2){  if( !ts2 ) ts2 = Date.UTCTimestamp();  var diff = ts2 - ts1;  if( diff < 5 )  {    return "about 5 sec ago";  }  else if( diff < 21 )  {    return "about 20 sec ago";  }  else if( diff < 60 )  {    return "about a minute ago";  }  else if( diff < 3600 )  {    return Math.floor( diff / 60 ) + " minutes ago";  }  else if( diff < 5400 )  {    return "about an hour ago";  }  else if( diff < 7200 )  {    return "about two hours ago";  }  else if( diff < 86400 )  {    return Math.floor( diff / 3600 ) + " hours ago";  }  else if( diff < 180000 )  {    return "Yesterday";  }  else  {    return Math.floor( diff / 86400 ) + " days ago";  }}